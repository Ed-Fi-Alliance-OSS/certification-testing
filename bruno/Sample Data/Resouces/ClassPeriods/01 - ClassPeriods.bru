meta {
  name: 01 - ClassPeriods
  type: http
  seq: 1
}

get {
  url: {{resourceBaseUrl}}/ed-fi/classPeriods?schoolId={{tempSchoolId}}
  body: none
  auth: bearer
}

params:query {
  ~classPeriodName: 07 - Regular
  ~id: aedcdefb90ad4abeb94c755ead9453db
  ~limit: 10
  ~maxChangeVersion: 
  ~minChangeVersion: 
  ~offset: 0
  ~officialAttendancePeriod: 
  schoolId: {{tempSchoolId}}
  ~schoolId: 255901001
  ~Snapshot-Identifier: 
  ~totalCount: false
}

auth:bearer {
  token: {{edFiCertToken}}
}

script:pre-request {
  const { validateDependency } = require('../../utils');

  validateDependency(bru, 'tempSchoolId', 'GET Schools');
}

script:post-response {
  const { setVars, setVarsMessage, wipeVars, wipeVarsWarning, pickSingle } = require('../../utils');
  const item = pickSingle(res.getBody());

  if (item) {
    setVars(bru, {
      tempClassPeriodUniqueId: item.id,
      tempClassPeriodName: item.classPeriodName
    });
    setVarsMessage('ClassPeriod');
  } else {
    wipeVars(bru, ['tempClassPeriodUniqueId', 'tempClassPeriodName']);
    wipeVarsWarning('ClassPeriod');
  }
}

settings {
  encodeUrl: true
}

docs {
  # Dependencies
    * `GET` Schools (filtered) or `GET` School by ID
}
