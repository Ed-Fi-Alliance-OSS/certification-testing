meta {
  name: 01 - CalendarDates
  type: http
  seq: 1
}

get {
  url: {{resourceBaseUrl}}/ed-fi/CalendarDates?schoolId={{tempSchoolId}}&calendarCode={{tempCalendarCode}}
  body: none
  auth: bearer
}

params:query {
  schoolId: {{tempSchoolId}}
  calendarCode: {{tempCalendarCode}}
  ~date: 
  ~schoolYear: 
  ~id: {{tempCalendarDateUniqueId}}
  ~limit: 10
  ~maxChangeVersion: 
  ~minChangeVersion: 
  ~offset: 0
  ~Snapshot-Identifier: 
  ~totalCount: false
}

auth:bearer {
  token: {{edFiCertToken}}
}

script:pre-request {
  const { validateDependency } = require('./utils');

  validateDependency(bru, 'tempSchoolId', 'GET Schools');
  validateDependency(bru, 'tempCalendarCode', 'GET Calendars');
}

script:post-response {
  const { setVars, setVarsMessage, wipeVars, wipeVarsWarning, pickSingle } = require('./utils');
  const item = pickSingle(res.getBody());

  if (item) {
    bru.setEnvVar('tempCalendarDateUniqueId', item.id);
    setVarsMessage('CalendarDate');
  } else {
    wipeVars(bru, ['tempCalendarDateUniqueId']);
    wipeVarsWarning('CalendarDate');
  }
}

settings {
  encodeUrl: true
}

docs {
  # Dependencies
    * `GET` Schools (filtered) or `GET` School by ID
    * `GET` Calendars (filtered) or `GET` Calendar by ID
}
