meta {
  name: 01 - BellSchedules
  type: http
  seq: 1
}

get {
  url: {{resourceBaseUrl}}/ed-fi/bellSchedules?schoolId={{tempSchoolId}}
  body: none
  auth: bearer
}

params:query {
  ~alternateDayName: 
  ~bellScheduleName: asdasd
  ~endTime: 
  ~id: {{tempBellScheduleId}}
  ~limit: 10
  ~maxChangeVersion: 
  ~minChangeVersion: 
  ~offset: 0
  schoolId: {{tempSchoolId}}
  ~Snapshot-Identifier: 
  ~startTime: 
  ~totalCount: false
  ~totalInstructionalTime: 
}

auth:bearer {
  token: {{edFiCertToken}}
}

script:pre-request {
  const { validateDependency } = require('../../utils');

  validateDependency(bru, 'tempSchoolId', 'GET Schools');
}

script:post-response {
  const { setVars, setVarsMessage, wipeVars, wipeVarsWarning, pickSingle } = require('../../utils');
  const item = pickSingle(res.getBody());

  if (item) {
    setVars(bru, {
      tempBellScheduleUniqueId: item.id,
      tempBellScheduleName: item.bellScheduleName
    });
    setVarsMessage('BellSchedule');
  } else {
    wipeVars(bru, ['tempBellScheduleUniqueId', 'tempBellScheduleName']);
    wipeVarsWarning('BellSchedule');
  }
}

settings {
  encodeUrl: true
}

docs {
  # Dependencies
    * `GET` Schools (filtered) or `GET` School by ID
}
