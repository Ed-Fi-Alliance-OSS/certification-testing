meta {
  name: 01 - Schools
  type: http
  seq: 1
}

get {
  url: {{resourceBaseUrl}}/ed-fi/schools?localEducationAgencyId={{tempLEAId}}&schoolId=1549697793
  body: none
  auth: bearer
}

params:query {
  localEducationAgencyId: {{tempLEAId}}
  schoolId: 1549697793
  ~administrativeFundingControlDescriptor: 
  ~charterApprovalAgencyTypeDescriptor: 
  ~charterApprovalSchoolYear: 
  ~charterStatusDescriptor: 
  ~internetAccessDescriptor: 
  ~limit: 1
  ~magnetSpecialProgramEmphasisSchoolDescriptor: 
  ~maxChangeVersion: 
  ~minChangeVersion: 
  ~offset: 0
  ~schoolId: {{tempSchoolUniqueId}}
  ~schoolTypeDescriptor: 
  ~Snapshot-Identifier: 
  ~titleIPartASchoolDesignationDescriptor: 
  ~totalCount: 
}

auth:bearer {
  token: {{edFiCertToken}}
}

script:pre-request {
  const { validateDependency } = require('../../utils');
  
  validateDependency(bru, 'tempLEAId', 'GET LocalEducationAgencies');
}

script:post-response {
  const { setVars, setVarsMessage, wipeVars, wipeVarsWarning, pickSingle } = require('../../utils');
  const item = pickSingle(res.getBody());

  if (item) {
    setVars(bru, {
      tempSchoolId: item.schoolId,
      tempSchoolName: item.nameOfInstitution,
      tempSchoolUniqueId: item.id
    });
    setVarsMessage('School');
  } else {
    wipeVars(bru, ['tempSchoolId', 'tempSchoolName', 'tempSchoolUniqueId']);
    wipeVarsWarning('School');
  }
}

settings {
  encodeUrl: true
}

docs {
  # Dependencies
    * `GET` LocalEducationAgencies
}
