meta {
  name: 03 - Courses (Arts)
  type: http
  seq: 4
}

post {
  url: {{resourceBaseUrl}}/ed-fi/courses
  body: json
  auth: inherit
}

body:json {
  {
    "courseCode": "ART 01",
    "courseTitle": "Art, Grade 1",
    "courseDescription": "Art, Grade 1",
    "academicSubjectDescriptor": "uri://ed-fi.org/AcademicSubjectDescriptor#Fine and Performing Arts",
    "courseDefinedByDescriptor": "uri://ed-fi.org/CourseDefinedByDescriptor#SEA",
    "courseGPAApplicabilityDescriptor": "uri://ed-fi.org/CourseGPAApplicabilityDescriptor#Applicable",
    "educationOrganizationReference": {
      "educationOrganizationId": "{{myLEAId}}"
    },
    "identificationCodes": [
      {
        "courseIdentificationSystemDescriptor": "uri://ed-fi.org/CourseIdentificationSystemDescriptor#LEA course code",
        "identificationCode": "ART 01"
      }
    ],
    "levelCharacteristics": [
      {
        "courseLevelCharacteristicDescriptor": "uri://ed-fi.org/CourseLevelCharacteristicDescriptor#Core Subject"
      }
    ],
    "numberOfParts": 1,
    "maxCompletionsForCredit": 3,
    "offeredGradeLevels": [],
    "competencyLevels": [],
    "learningStandards": [],
    "learningObjectives": [],
    "highSchoolCourseRequirement": null,
    "maximumAvailableCreditConversion": null,
    "maximumAvailableCredits": null,
    "maximumAvailableCreditTypeDescriptor": null,
    "minimumAvailableCreditConversion": null,
    "minimumAvailableCredits": null,
    "minimumAvailableCreditTypeDescriptor": null
  }
}

script:post-response {
  const { setVars } = require('./utils');
  const locationHeader = res.headers.Location || res.headers.location;
  if (locationHeader) {
    const cohortId = locationHeader.split('/').pop();
    setVars(bru, { 'tempCohortUniqueId': cohortId });
  }
}

settings {
  encodeUrl: true
}
