meta {
  name: 09 - StudentSchoolAssociations
  type: http
  seq: 10
}

get {
  url: {{resourceBaseUrl}}/ed-fi/studentSchoolAssociations?studentUniqueId={{tempStudentUniqueId}}
  body: none
  auth: bearer
}

params:query {
  studentUniqueId: {{tempStudentUniqueId}}
  ~limit: 1
  ~offset: 0
  ~minChangeVersion: 
  ~maxChangeVersion: 
  ~totalCount: 
  ~Snapshot-Identifier: 
  ~entryDate: 
  ~schoolId: 
  ~calendarCode: 
  ~educationOrganizationId: 
  ~graduationPlanTypeDescriptor: 
  ~graduationSchoolYear: 
  ~classOfSchoolYear: 
  ~entryTypeDescriptor: 
  ~exitWithdrawTypeDescriptor: 
  ~entryGradeLevelDescriptor: 
  ~residencyStatusDescriptor: 
  ~employedWhileEnrolled: 
  ~exitWithdrawDate: 
  ~fullTimeEquivalency: 
  ~id: 
  ~primarySchool: 
  ~repeatGradeIndicator: 
  ~schoolChoiceTransfer: 
  ~termCompletionIndicator: 
}

auth:bearer {
  token: {{edFiCertToken}}
}

script:post-response {
  const response = res.getBody();
  bru.deleteEnvVar('tempStudentSchoolAssociationId');

  if(!!response && response.length > 0) {
    bru.setEnvVar('tempStudentSchoolAssociationId', response[0].id);
  }
}

settings {
  encodeUrl: true
}
