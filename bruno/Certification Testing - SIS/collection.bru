meta {
  name: Certification Testing - SIS
}

auth {
  mode: none
}

vars:pre-request {
  studentUniqueIdValueSSEACollection: 
}

script:pre-request {
  // Utility functions for all scenarios in this collection
  bru.findLatestByModifiedDate = function(data) {
      if (!Array.isArray(data) || data.length === 0) return null;
      return data.reduce((latest, current) => {
          return (!latest || current._lastModifiedDate > latest._lastModifiedDate) ? current : latest;
      }, null);
  };
  
  bru.findLatestByDateProperty = function(data, dateProperty) {
      if (!Array.isArray(data) || data.length === 0) return null;
      return data.reduce((latest, current) => {
          return (!latest || current[dateProperty] > latest[dateProperty]) ? current : latest;
      }, null);
  };
  
  console.log('collection authentication...')
  await bru.sendRequest({
      url: `${bru.getEnvVar('baseUrl')}/oauth/token`,
      method: 'POST',
      headers: {
          "Content-Type": "application/x-www-form-urlencoded" 
      },
      data: {
          "grant_type": 'client_credentials',
          "client_id": bru.getEnvVar('edFiClientId'),
          "client_secret": bru.getEnvVar('edFiClientSecret')
      }
  }, async function(err, res) {
      if (err) {
          console.log('Error when generating the token:', err); 
      } else {
          accessToken = res.data.access_token;
          bru.setEnvVar('certToken',accessToken);
          console.log("Access token is: ", accessToken);
      }
  });
  
  
}
