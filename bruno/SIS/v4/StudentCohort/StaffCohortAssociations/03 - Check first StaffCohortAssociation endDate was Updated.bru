meta {
  name: 03 - Check first StaffCohortAssociation endDate was Updated
  type: http
  seq: 3
}

get {
  url: {{resourceBaseUrl}}/ed-fi/staffCohortAssociations/{{firstStaffCohortAssociationUniqueId}}
  body: none
  auth: inherit
}

assert {
  res.status: eq 200
  res.body: isDefined
  res.body.id: isString
  res.body.id: isNotEmpty
  res.body.cohortReference: isDefined
  res.body.cohortReference.educationOrganizationId: isNumber
  res.body.cohortReference.educationOrganizationId: neq 0
  res.body.cohortReference.cohortIdentifier: isString
  res.body.cohortReference.cohortIdentifier: isNotEmpty
  res.body.beginDate: isString
  res.body.beginDate: isNotEmpty
  res.body.staffReference: isDefined
  res.body.staffReference.staffUniqueId: isString
  res.body.staffReference.staffUniqueId: isNotEmpty
  res.body.endDate: isString
  res.body.endDate: isNotEmpty
}

script:pre-request {
  const { validateDependency } = require('./utils');

  validateDependency(bru, 'firstStaffCohortAssociationUniqueId', '01 - Check first StaffCohortAssociation is valid', {
    actionHint: 'Ensure you ran the first certification scenario successfully before continuing.'
  });
  validateDependency(bru, 'firstStaffCohortAssociationEndDate', '01 - Check first StaffCohortAssociation is valid', {
    actionHint: 'Ensure you ran the first certification scenario successfully before continuing.'
  });
}

script:post-response {
  const { getVar, expectChanged, throwNotFoundOrSpecificError } = require('./utils');
  const { logScenario, logSpecStaffCohortAssociation } = require('./logging');
  const entityName = 'StaffCohortAssociation';
  const scenarioName = this.req.name;
  
  if (res.status !== 200 || !res.body) {
    throwNotFoundOrSpecificError(entityName);
  }

  const current = res.getBody();
  const previousEndDate = getVar(bru, 'firstStaffCohortAssociationEndDate');
  
  expectChanged(previousEndDate, current.endDate, 'endDate');
  
  logScenario(entityName, scenarioName, current, logSpecStaffCohortAssociation, [
    'endDate'
  ]);
}

settings {
  encodeUrl: true
  timeout: 0
}
