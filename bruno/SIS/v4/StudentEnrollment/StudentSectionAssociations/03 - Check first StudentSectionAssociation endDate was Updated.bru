meta {
  name: 03 - Check first StudentSectionAssociation endDate was Updated
  type: http
  seq: 3
}

get {
  url: {{resourceBaseUrl}}/ed-fi/studentSectionAssociations/{{firstStudentSectionAssociationUniqueId}}
  body: none
  auth: inherit
}

assert {
  res.status: eq 200
  res.body.id: isString
  res.body.id: isNotEmpty
  res.body.sectionReference: isDefined
  res.body.sectionReference.schoolId: isNumber
  res.body.sectionReference.schoolId: neq 0
  res.body.sectionReference.schoolYear: isNumber
  res.body.sectionReference.schoolYear: neq 0
  res.body.sectionReference.localCourseCode: isString
  res.body.sectionReference.localCourseCode: isNotEmpty
  res.body.sectionReference.sectionIdentifier: isString
  res.body.sectionReference.sectionIdentifier: isNotEmpty
  res.body.sectionReference.sessionName: isString
  res.body.sectionReference.sessionName: isNotEmpty
  res.body.studentReference: isDefined
  res.body.studentReference.studentUniqueId: isString
  res.body.studentReference.studentUniqueId: isNotEmpty
  res.body.beginDate: isString
  res.body.endDate: isString
}

script:pre-request {
  const { validateDependency } = require('./utils');
  validateDependency(bru, 'firstStudentSectionAssociationUniqueId', '01 - Check first StudentSectionAssociation is valid', { actionHint: 'Ensure you ran the first certification scenario successfully before continuing.' });
  validateDependency(bru, 'firstStudentSectionAssociationEndDate', '01 - Check first StudentSectionAssociation is valid', { actionHint: 'Ensure you ran the first certification scenario successfully before continuing.' });
}

script:post-response {
  const { getVar, expectChanged } = require('./utils');
  const { logScenario, logSpecStudentSectionAssociation } = require('./logging');
  const scenarioName = this.req.name;
  const entityName = 'StudentSectionAssociation';
  const current = res.getBody();
  
  expectChanged(getVar(bru, 'firstStudentSectionAssociationEndDate'), current.endDate, 'endDate');
  logScenario(entityName, scenarioName, current, logSpecStudentSectionAssociation, ['endDate']);
}

settings {
  encodeUrl: true
  timeout: 0
}
