meta {
  name: 02 - Check CalendarType was updated
  type: http
  seq: 2
}

get {
  url: {{resourceBaseUrl}}/ed-fi/Calendars/{{tempCalendarUniqueId}}
  body: none
  auth: inherit
}

params:query {
  ~calendarCode: 107SS111111
  ~schoolYear: 2025
  ~calendarTypeDescriptor: 
  ~id: {{tempCalendarId}}
}

assert {
  res.status: eq 200
  res.body.calendarTypeDescriptor: isString
  res.body.calendarTypeDescriptor: isNotEmpty
}

script:pre-request {
  const { validateDependency } = require('./utils');

  validateDependency(bru, 'tempCalendarUniqueId', '01 - Check Calendar is valid', {
    actionHint: 'Ensure you ran the calendar validation for the correct calendarCode.'
  });
}

script:post-response {
  const { logCalendarResponse } = require('./v4/EducationOrganization/Calendars/calendars-utils');
  const { expectChanged, extractDescriptor } = require('./utils');
  const response = res.getBody();
  const previousType = bru.getEnvVar('tempCalendarTypeDescriptor');
  const currentType = (response && response.calendarTypeDescriptor)
    ? extractDescriptor(response.calendarTypeDescriptor)
    : null;

  if (response) {
    logCalendarResponse('Scenario 2 - Check CalendarType was updated', response, ['calendarCode', 'calendarTypeDescriptor']);
    expectChanged(previousType, currentType, 'Calendar type');
  }
}

settings {
  encodeUrl: true
}

docs {
  # Dependencies
    * Scenario 1 - Check Calendar is Valid
}
